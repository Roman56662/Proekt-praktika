version: "3.5"

networks:
  frontend-network:
    external:
      name: "${FRONTEND_NETWORK_NAME}"
  backend-network:
    external:
      name: "${BACKEND_NETWORK_NAME}"

services:
  # Nextjs applicaton container
  &app-service app: &app-service-template
    image: ci.chulakov.ru:5000/chulakov/node:latest
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "5m"
    container_name: ${COMPOSE_PROJECT_NAME}-app
    restart: on-failure
    environment: &app-service-envs
      VIRTUAL_HOST: "${COMPOSE_PROJECT_NAME}"
      API_URL: "${API_URL}"
      PORT: "${PORT}"
      NEXT_TELEMETRY_DISABLED: "${NEXT_TELEMETRY_DISABLED}"
      INSPECT_PORT: "${INSPECT_PORT}"
    # for keep alive container
    command: ["tail", "-f", "/dev/null"]
    ports:
      - "${INSPECT_PORT}:${INSPECT_PORT}"
    working_dir: "/app"
    volumes:
      - ./../../src:/app:rw
    networks:
      - backend-network

  # NGINX container with proxy
  nginx-app: &nginx-service-template
    image: ci.chulakov.ru:5000/chulakov/nginx-proxy:latest
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "5m"
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    restart: on-failure
    depends_on:
      - *app-service
    environment:
      REMOTE_HOST: ${COMPOSE_PROJECT_NAME}-app
      REMOTE_PORT: "${PORT}"
      ROOT_DIR: "/app"
      VIRTUAL_HOST: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - ./../../src:/app:ro
    ports:
      - "${PORT}:80"
    networks:
      - backend-network
      - frontend-network